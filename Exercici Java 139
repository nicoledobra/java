El present exercici consisteix en construir una GUI simple que mostri en un dibuix un text llegit per l'entrada.

Per construir aquesta GUI començarem per importar els següents paquets:

import javax.swing.*;

import java.awt.*;

import java.awt.event.ActionListener;

import java.awt.event.ActionEvent;

A continuació crearem una classe Java de nom Picture que hereti de la classe JPanel. Aquesta classe tindrà el següent atribut:

text -> atribut privat de tipus String. Emmagatzemarà el text a mostrar en el dibuix.
La classe tindrà un constructor amb un paràmetre de tipus String. Aquest constructor començarà cridant al constructor de la superclasse sense paràmetres i, després, inicialitzarà l'atribut text amb el valor passat com a paràmetre.

Definirem també el mètode buit setText que rebrà un paràmetre de tipus String. Aquest mètode actualitzarà el valor de l'atribut text de la classe i farà també ús del mètode repaint() per tal de redibuixar el component després del canvi de contingut.

Tot seguit reescriurem el comportament del mètode public void paintComponent( Graphics g ) per tal que faci el següent:

Ha d'establir el color del dibuix a blanc (Color.WHITE).
Ha de crear un rectangle omplert per dins que comenci a les coordenades x -> 10 i y -> 10, amb unes dimensions de 130 d'amplada i 100 d'alçada.
Ha d'establir el color del dibuix a verd (Color.GREEN).
Ha d'assignar com a font del text la font per defecte, en cursiva i amb una mida de 20 (això es pot aconseguir amb la instrucció g.setFont ( new Font ( "", Font.ITALIC, 20 ) ) .
Finalment, ha de crear una nova cadena de text al dibuix amb el text que contingui l'atribut de la classe i que comenci a la posició x -> 15 i y -> 50.
Tot seguit crearem una nova classe pública de Java de nom Drawing2 que hereti de la classe JFrame. En aquesta ocasió, la classe tindrà els següents atributs:

picture -> un atribut privat de tipus Picture.
cp -> un atribut privat de tipus Container.
El constructor de la classe no rebrà paràmetres i començarà cridant el constructor de la superclasse passant-li com a text per la finestra "Drawing2 Example". Establirem les mides de la finestra usant com a amplada 160 i com a alçada 200, i assignarem com a acció per defecte en tancar EXIT_ON_CLOSE. A continuació incialitzarem l'atribut contenidor i li assignarem un nou BorderLayout.

Encara dins del constructor, crearem un nou JButton amb el text "Set text" i li assignarem un ActionListener d'una nova classe anomenada InputDialog. Aquest botó l'afegirem al contenidor a NORTH del layout.

També dins del constructor, inicialitzarem l'atribut picture sense text (amb la cadena buida). Afegirem la imatge al contenidor a CENTER del layout.

Per acabar, encara dins del constructor, crearem un nou JButton amb el text "Clear text" i li assignarem un ActionListener d'una nova classe anomenada clearText. Aquest botó l'afegirem al contenidor a SOUTH del layout.

A continuació caldrà crear una nova classe privada (a dins de la classe Drawing2) de nom InputDialog que implementi la interfície ActionListener. A dins d'aquesta classe reescriurem el mètode ActionPerformed de tal manera que recuperem el JButton que ha creat l'event i, tot seguit, es generi un nou diàleg de captura de dades (com el de la imatge del final de l'enunciat). Hem d'emmagatzemar en una nova variable el text capturat mitjançant el diàleg i l'hem de fer servir per actualitzar el valor del text de l'atribut picture de la classe Drawing2.

També farà falta crear una nova classe privada (a dins de la classe Drawing2) de nom clearText que implementi la interfície ActionListener. A dins d'aquesta classe reescriurem el mètode ActionPerformed de tal manera que s'encarregui d'actualitzar el text de l'atribut picture de la classe Drawing2 a la cadena buida.

Finalment, cal crear el mètode main per a la classe Drawing2 que s'encarregui de crear un nou objecte de la GUI i fer-lo visible.

code:

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

class Picture extends JPanel {
    private String text;

    public Picture(String text) {
        this.text = text;
    }

    public void setText(String text) {
        this.text = text;
        repaint();
    }

    @Override
    public void paintComponent(Graphics g) {
        super.paintComponent(g);

        // Establecer el color del dibujo a blanco
        g.setColor(Color.WHITE);

        // Crear un rectángulo relleno blanco
        g.fillRect(10, 10, 130, 100);

        // Establecer el color del dibujo a verde
        g.setColor(Color.GREEN);

        // Establecer la fuente del texto
        g.setFont(new Font("", Font.ITALIC, 20));

        // Dibujar la cadena de texto
        g.drawString(text, 15, 50);
    }
}

public class Drawing2 extends JFrame {
    private Picture picture;
    private Container cp;

    public Drawing2() {
        super("Drawing2 Example");
        setSize(160, 200);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        cp = getContentPane();
        cp.setLayout(new BorderLayout());

        JButton setTextButton = new JButton("Set text");
        setTextButton.addActionListener(new InputDialog());
        cp.add(setTextButton, BorderLayout.NORTH);

        picture = new Picture("");
        cp.add(picture, BorderLayout.CENTER);

        JButton clearTextButton = new JButton("Clear text");
        clearTextButton.addActionListener(new ClearText());
        cp.add(clearTextButton, BorderLayout.SOUTH);
    }

    private class InputDialog implements ActionListener {
        public void actionPerformed(ActionEvent e) {
            JButton source = (JButton) e.getSource();
            String newText = JOptionPane.showInputDialog(source.getParent(), "Enter text:");
            if (newText != null) {
                picture.setText(newText);
            }
        }
    }

    private class ClearText implements ActionListener {
        public void actionPerformed(ActionEvent e) {
            picture.setText("");
        }
    }

    public static void main(String[] args) {
        Drawing2 drawing2 = new Drawing2();
        drawing2.setVisible(true);
    }
}
